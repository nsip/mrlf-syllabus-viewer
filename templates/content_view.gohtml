<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>[{{ .FM.RootName }}]::Content View</title>
    <meta name="description" content="auto-generated curriculum content data-view">
    <meta name="author" content="nsip">
    <link rel="icon" type="image/jpg" href="/images/esa.png"/>
    <!--Import Google Icon Font-->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <!-- google text fonts -->
    <link href="https://fonts.googleapis.com/css?family=Karla|PT+Sans+Narrow&display=swap" rel="stylesheet">
    <!-- page-specific css -->

    <link type="text/css" rel="stylesheet" href="/{{ .FM.CssPath }}content.css" media="screen,projection" />

    <!-- to keep strucutral css simple; load overrides  -->

    <link type="text/css" rel="stylesheet" href="/{{ .FM.CssPath }}content_overrides.css" media="screen,projection" />

    <!--Let browser know website is optimized for mobile-->
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!--  -->
    <!--  -->
    <!-- external javascript dependencies -->
    <!--  -->
    <!-- jquery support -->
    <!--  -->
    <script type="text/javascript" src="/{{ .FM.JsPath }}jquery-3.3.1.min.js"></script>
    <!--  -->
    <!-- math/tex content interpreter from katex - khan academy maths/latex renderer -->
    <script defer src="https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/contrib/mathtex-script-type.min.js" integrity="sha384-LJ2FmexL77rmGm6SIpxq7y+XA6bkLzGZEgCywzKOZG/ws4va9fUVu2neMjvc3zdv" crossorigin="anonymous"></script>
    <!--  -->
    <!--  -->
</head>

<body>
    <!--  -->
    <!-- main content -->
    <!--  -->
    <main class="container">

        {{- define "syllabus"}}
          {{- range $key, $syllabus := . }}
            <div class="syllabus">
              {{ $syl_heading := printf "%s%s" $syllabus.text " Syllabus" }}
              <h2>{{$syl_heading}}</h2>

              {{- if $syllabus.dcterms_abstract }}
                <div class="intro">
                  <h3>Introduction</h3>
                  <div>{{$syllabus.dcterms_abstract.introduction}}</div>
                </div>
              {{- end}}

              {{- if $syllabus.dcterms_abstract }}
                <div class="rationale">
                  <h3>Rationale</h3>
                  <div>{{$syllabus.dcterms_abstract.rationale}}</div>
                </div>
              {{- end}}

              {{- if $syllabus.dcterms_abstract }}
                <div class="aim">
                  <h3>Aim</h3>
                  <div>{{$syllabus.dcterms_abstract.aim}}</div>
                </div>
              {{- end}}

              {{- template "stages" $syllabus.children }}

            </div>
          {{- end}}
        {{- end}}

        {{- define "stages"}}
          <div class="stages">
            <h3>Stages</h3>
            {{- range $stgKey, $stg := . }}
              {{- template "stage" $stg }}
            {{- end}}
          </div>
        {{- end}}

        {{- define "stage"}}
          {{ $stg := . }}
          {{ $stg_title := $stg.dcterms_title.literal }}
          <div class="stage">
            <div class="stage_title">{{$stg_title}}</div>
            <hr/>

            {{- if $stg.dcterms_description }}
              <div class="statement">
                <div class="heading">Statement</div>
                <div class="description" >{{$stg.dcterms_description.literal}}</div>
              </div>
            {{- end}}
            <br/>

            {{- if $stg.oer_supportingMaterial }}
              <div class="supportingMaterial">
                <div class="heading">Supporting Material</div>
                <div class="description" >{{$stg.oer_supportingMaterial.literal}}</div>
              </div>
            {{- end}}
            <br/>

            {{- template "objectives" $stg.objectives }}
          </div>
        {{- end}}

        {{- /* TODO: Template accepts only one variable parameter. Therefore, it is impossible
           to pass stage title and content group node to another template, content_group.
           For the moment, the following code will remain here until Golang template gets
           the above capability.
        */ -}}
        {{- define "content_groups"}}
          <div class="content_groups">
            {{- range $cgKey, $cg := .content_group }}
              {{ $cg_heading := $cg.dcterms_title.literal }}
              <div class="content_group">
                <div class="content_group_heading" title="{{$cg.asn_statementLabel.literal}}">{{$cg_heading}}</div>
                <div class="content_group_body">
                  {{- if $cg.content }}
                    <div class="contents">
                      <div class="heading">Content</div>
                      {{- template "content_list" $cg.content }}
                    </div>
                  {{- end}}

                  {{- if $cg.dcterms_coverage }}
                    <div class="concept">
                      <div class="heading">Concept</div>
                      <div class="description" >{{$cg.dcterms_coverage.literal}}</div>
                    </div>
                  {{- end}}

                  {{- if $cg.deo_epilogue }}
                    <div class="bg_info">
                      <div class="heading">Background Information</div>
                      <div class="description">{{$cg.deo_epilogue.literal}}</div>
                    </div>
                  {{- end}}

                  {{- if $cg.asn_minorAlignment }}
                    <div class="learning_progressions">
                      <div class="heading">Learning Progressions</div>
                      {{- template "learning_progressions" $cg.asn_minorAlignment }}
                    </div>
                  {{- end}}
                </div>
              </div>
              <br/>
            {{- end }}
          </div>
        {{- end}}

        {{- define "content_list"}}
          <div class="content_list">
            {{- range $contentKey, $content := . }}
              <div class="content">
                <span class="content_description" title="{{$content.asn_statementLabel.literal}}">{{$content.dcterms_description.literal}}</span>
                {{- if $content.asn_exactAlignment }}
                  {{- if $content.asn_exactAlignment.uri }}
                    <a class="exact_alignment" href="{{$content.asn_exactAlignment.uri}}">({{$content.asn_exactAlignment.prefLabel}})</a>
                  {{- else }}
                    <a class="exact_alignment" title="missing uri">({{$content.asn_exactAlignment.prefLabel}})</a>
                  {{- end}}
                {{- end}}
                <ul class="intended_learnings">
                  {{- range $ilKey, $il := $content.children }}
                    <li class="intended_learning">
                      <div>
                        {{$il.text}}
                        {{- template "lac" $il.dcterms_related }}
                        {{- template "lac" $il.dcterms_skillEmbodied }}
                      </div>
                      <ul>
                        {{- range $abpKey, $abp := $il.children }}
                          <li class="arrow_bullet_point">
                            {{$abp.dcterms_description.literal}}
                            {{- template "lac" $il.dcterms_related }}
                            {{- template "lac" $abp.dcterms_skillEmbodied }}
                          </li>
                        {{- end }}
                      </ul>
                    </li>
                  {{- end }}
                </ul>
              </div>
            {{- end }}
          </div>
        {{- end}}

        {{- define "learning_progressions"}}
          {{- range $_, $lp := . }}
            {{- if $lp.uri }}
              <span><a href="{{$lp.uri}}">{{$lp.prefLabel}}</a>, </span>
            {{- else}}
              <span><a title="missing uri">{{$lp.prefLabel}}</a>, </span>
            {{- end}}
          {{- end}}
        {{- end}}

        {{- define "lac"}}
          {{- if . }}
            <span>
              {{- range $se := . }}
                {{- $imgsrc := printf "%s%s" "/images/" .imageFile }}
                {{- if .uri }}
                  <a href="{{.uri}}" title="{{.prefLabel}}"><img src="{{$imgsrc}}" alt="{{.prefLabel}}"></a>
                {{- else }}
                  {{- $msg := printf "%s%s%s" .prefLabel "\n" "(missing uri)" }}
                  <a title="{{$msg}}"><img src="{{$imgsrc}}" alt="{{.prefLabel}}"></a>
                {{- end }}
              {{- end}}
            </span>
          {{- end}}
        {{- end}}

        {{- define "substrand"}}
          {{- range $ssKey, $ss := . }}
            {{- template "content_groups" $ss }}
          {{- end}}
        {{- end}}

        {{- define "objectives"}}
          <div class="objectives">
            <div class="heading">Objectives</div>
            {{- range $objKey, $obj := . }}
              <br/>

              <div class="objective">
                <span class="objective_description" title="{{$obj.asn_statementLabel.literal}}">{{$obj.dcterms_title.literal}}: {{$obj.text}}</span>

                  <div class="outcomes">
                    <div class="heading">Outcomes</div>
                    <ul class="body">
                      {{- range $outcomeKey, $outcome := $obj.outcome }}
                        <li class="outcome" title="{{$outcome.asn_statementLabel.literal}}">{{$outcome.text}}</li>
                      {{- end}}
                    </ul>
                  </div>

                  <br/>

                  {{- if $obj.oer_forComponent.substrand }}
                    {{- template "substrand" $obj.oer_forComponent.substrand }}
                  {{- else}}
                    {{- template "content_groups" $obj.oer_forComponent }}
                  {{- end}}
              </div>
            {{- end}}
          </div>
        {{- end}}

        {{- define "kla"}}
          {{- $val := . }}
          <h1 class="kla_heading">{{$val.text}}</h1>
          <hr/>
          {{- template "syllabus" $val.children }}
        {{- end}}

      {{- template "kla" .JSON }}

    </main>

    <!-- page-specific javascript -->
    <!-- <script type="text/javascript" src="/{{ .FM.JsPath }}content.js"></script> -->
    <!--  -->
    <!-- add minimap navigator -->
    <!--  -->
    <canvas id="map" width="100px"></canvas>



  <script type="text/javascript" src="/{{ .FM.JsPath }}pagemap.min.js"></script>
  <script>
      pagemap(document.querySelector('#map'), {
          styles: {
          // highlight minimap text outline
          'span': 'rgba(0,0,0,0.05)',
          '.container > .syllabus > .stages > .stage > .stage_title': 'rgba(0,0,0,1)',
          '.container > .syllabus > .stages > .stage > .objectives > .objective > .objective_description': 'rgba(0,0,0,0.1)'
          }
      });

  </script>

</body>


</html>
